# Corrected Traefik Routing Configuration
# Fixes critical routing issues where all services redirect to landing page

http:
  routers:
    # Landing page - MUST be lowest priority
    landing:
      rule: Host(`nxcore.tail79107c.ts.net`) && Path(`/`)
      priority: 1
      entryPoints: [websecure]
      tls: {}
      service: landing-svc

    # Core Infrastructure - High priority
    traefik-api:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/api`)
      priority: 100
      entryPoints: [websecure]
      tls: {}
      service: api@internal

    traefik-dashboard:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/traefik`)
      priority: 100
      entryPoints: [websecure]
      tls: {}
      middlewares: [traefik-strip]
      service: api@internal

    # Monitoring & Observability - High priority
    grafana:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/grafana`)
      priority: 200
      entryPoints: [websecure]
      tls: {}
      middlewares: [grafana-strip, grafana-headers]
      service: grafana-svc

    prometheus:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/prometheus`)
      priority: 200
      entryPoints: [websecure]
      tls: {}
      middlewares: [prometheus-strip]
      service: prometheus-svc

    cadvisor:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/metrics`)
      priority: 200
      entryPoints: [websecure]
      tls: {}
      middlewares: [cadvisor-strip]
      service: cadvisor-svc

    uptime-kuma:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/status`)
      priority: 200
      entryPoints: [websecure]
      tls: {}
      middlewares: [uptime-strip]
      service: uptime-svc

    # AI & Development - High priority
    openwebui:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/ai`)
      priority: 200
      entryPoints: [websecure]
      tls: {}
      middlewares: [openwebui-strip, openwebui-headers]
      service: openwebui-svc

    n8n:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/n8n`)
      priority: 200
      entryPoints: [websecure]
      tls: {}
      middlewares: [n8n-strip, n8n-headers]
      service: n8n-svc

    # Management Tools - High priority
    portainer:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/portainer`)
      priority: 200
      entryPoints: [websecure]
      tls: {}
      middlewares: [portainer-strip]
      service: portainer-svc

    filebrowser:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/files`)
      priority: 200
      entryPoints: [websecure]
      tls: {}
      middlewares: [files-strip]
      service: filebrowser-svc

    # Authentication
    authelia:
      rule: Host(`nxcore.tail79107c.ts.net`) && PathPrefix(`/auth`)
      priority: 200
      entryPoints: [websecure]
      tls: {}
      middlewares: [auth-strip]
      service: authelia-svc

  middlewares:
    # StripPrefix middlewares - CORRECTED
    traefik-strip:
      stripPrefix:
        prefixes: ["/traefik"]
        forceSlash: false

    grafana-strip:
      stripPrefix:
        prefixes: ["/grafana"]
        forceSlash: false

    prometheus-strip:
      stripPrefix:
        prefixes: ["/prometheus"]
        forceSlash: false

    cadvisor-strip:
      stripPrefix:
        prefixes: ["/metrics"]
        forceSlash: false

    uptime-strip:
      stripPrefix:
        prefixes: ["/status"]
        forceSlash: false

    openwebui-strip:
      stripPrefix:
        prefixes: ["/ai"]
        forceSlash: false

    n8n-strip:
      stripPrefix:
        prefixes: ["/n8n"]
        forceSlash: false

    portainer-strip:
      stripPrefix:
        prefixes: ["/portainer"]
        forceSlash: false

    files-strip:
      stripPrefix:
        prefixes: ["/files"]
        forceSlash: false

    auth-strip:
      stripPrefix:
        prefixes: ["/auth"]
        forceSlash: false

    # Service-specific headers
    grafana-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: https
          X-Forwarded-Host: nxcore.tail79107c.ts.net
          X-Forwarded-Prefix: /grafana
        customResponseHeaders:
          X-Frame-Options: SAMEORIGIN

    openwebui-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: https
          X-Forwarded-Host: nxcore.tail79107c.ts.net
          X-Forwarded-Prefix: /ai
        customResponseHeaders:
          X-Frame-Options: SAMEORIGIN

    n8n-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: https
          X-Forwarded-Host: nxcore.tail79107c.ts.net
          X-Forwarded-Prefix: /n8n
        customResponseHeaders:
          X-Frame-Options: SAMEORIGIN

  services:
    # Service definitions
    landing-svc:
      loadBalancer:
        servers:
          - url: "http://landing:80"

    grafana-svc:
      loadBalancer:
        servers:
          - url: "http://grafana:3000"

    prometheus-svc:
      loadBalancer:
        servers:
          - url: "http://prometheus:9090"

    cadvisor-svc:
      loadBalancer:
        servers:
          - url: "http://cadvisor:8080"

    uptime-svc:
      loadBalancer:
        servers:
          - url: "http://uptime-kuma:3001"

    openwebui-svc:
      loadBalancer:
        servers:
          - url: "http://openwebui:8080"

    n8n-svc:
      loadBalancer:
        servers:
          - url: "http://n8n:5678"

    portainer-svc:
      loadBalancer:
        serversTransport: portainer-insecure
        servers:
          - url: "https://portainer:9443"

    filebrowser-svc:
      loadBalancer:
        servers:
          - url: "http://filebrowser:80"

    authelia-svc:
      loadBalancer:
        servers:
          - url: "http://authelia:9091"

  serversTransports:
    portainer-insecure:
      insecureSkipVerify: true
